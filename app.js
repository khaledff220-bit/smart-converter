// =================================================================
// 1. ุชุนุฑูู ุงูุจูุงูุงุช ูุงูููุชุบูุฑุงุช ุงูุนุงูููุฉ
// =================================================================
const API_URL = 'https://api.exchangerate-api.com/v4/latest/USD';
const CURRENCY_CACHE_KEY = 'currency_rates_cache';
const CURRENCY_UPDATE_INTERVAL = 6 * 60 * 60 * 1000; // 6 ุณุงุนุงุช

// ูุชุบูุฑุงุช ุญุงูุฉ ุงูุฅุนูุงูุงุช (AdSense/AdMob Logic)
let interstitialCounter = 0;
const INTERSTITIAL_FREQUENCY = 2; // ุชุญุฏูุซ: ุฃุธูุฑ ุงูุฅุนูุงู ุงูุจููู ูู 2 ุนูููุงุช ุนูุฏุฉ
const AD_CLIENT_ID = 'ca-pub-6516738542213361'; // ุดูุฑุฉ ุงููุงุดุฑ
const INTERSTITIAL_AD_SLOT = '1710677340'; // ุดูุฑุฉ ูุญุฏุฉ ุงูุฅุนูุงู ุงูุจููู (ูุฑุฌู ูุฑุงุฌุนุฉ ูุฐุง)

// ูููู ุงูุจูุงูุงุช ุงูุฃุณุงุณู ูููุญุฏุงุช
const ALL_UNITS = {
    'length': {
        title: 'ุชุญููู ุงูุทูู',
        icon: '๐',
        content: `
            **ุชุญูููุงุช ุงูุทูู:** ูู ุฃุณุงุณ ุงูููุฏุณุฉ ูุงูููุงุณุงุช ุงูููููุฉ. ูุณุชุฎุฏููุง ุงููููุฏุณููุ ุงูุจูุงุคููุ ูุญุชู ูู ุงูุชุณูู.
            ุชุณุงุนุฏู ูุฐู ุงูุฃุฏุงุฉ ุนูู ุงูุชุญููู ุจูู ุงููุญุฏุงุช ุงูุนุงูููุฉ ูุซู ุงููุชุฑ ูุงููููููุชุฑ ูุงููุญุฏุงุช ุงูุฅูุจุฑุงุทูุฑูุฉ ูุซู ุงููุฏู ูุงูููู ูุงูุจูุตุฉ ุจุฏูุฉ ูุงุฆูุฉ.
            ุณูุงุก ููุช ุชุฎุทุท ููุดุฑูุน ุจูุงุก ุฃู ุชุญุชุงุฌ ุฅูู ุชุญููู ูุณุงูุงุช ุงูุณูุฑุ ูุฅู ูุฐุง ุงููุญูู ูู ุงูุฃุฏุงุฉ ุงููุซุงููุฉ ูู.
        `
        ,
        units: {
            'meter': { name: 'ูุชุฑ (ู)', factor: 1 },
            'kilometer': { name: 'ูููููุชุฑ (ูู)', factor: 1000 },
            'foot': { name: 'ูุฏู (ft)', factor: 0.3048 },
            'mile': { name: 'ููู (mi)', factor: 1609.34 },
            'inch': { name: 'ุจูุตุฉ (in)', factor: 0.0254 },
        }
    },
    'weight': {
        title: 'ุชุญููู ุงููุฒู',
        icon: 'โ๏ธ',
        content: `
            **ุชุญูููุงุช ุงููุฒู:** ุถุฑูุฑูุฉ ูู ุงูุชุฌุงุฑุฉุ ูุงูุทุจุฎุ ูุงูุนููู. ูู ุงูููููุบุฑุงูุงุช ุฅูู ุงูุฃุฑุทุงู ูุงูุฃููุตุงุชุ ูุฏ ูููู ุงูุชุญููู ุจูู ูุญุฏุงุช ุงููุฒู ูุฑุจููุง.
            ูููุฑ ูู ูุฐุง ุงููุญูู ุทุฑููุฉ ุณููุฉ ูุณุฑูุนุฉ ูุชุญููู ุงูุฃูุฒุงู ุจุฏูุฉุ ููุง ูุถูู ุฃู ุชููู ููุงุณุงุชู ุตุญูุญุฉ ุฏุงุฆููุง.
            ุณูุงุก ููุช ุชุฒู ููููุงุช ููุตูุฉ ุทุนุงู ุฃู ุชุญุณุจ ุดุญูุฉ ุชุฌุงุฑูุฉุ ุงุนุชูุฏ ุนูู ุงููุญูู ุงูุฐูู.
        `
        ,
        units: {
            'kilogram': { name: 'ููููุบุฑุงู (ูุบู)', factor: 1 },
            'gram': { name: 'ุบุฑุงู (ุบ)', factor: 0.001 },
            'pound': { name: 'ุฑุทู (lb)', factor: 0.453592 },
            'ounce': { name: 'ุฃููุตุฉ (oz)', factor: 0.0283495 },
            'ton': { name: 'ุทู ูุชุฑู', factor: 1000 },
        }
    },
    'temp': {
        title: 'ุชุญููู ุงูุญุฑุงุฑุฉ',
        icon: '๐ก๏ธ',
        content: `
            **ุชุญูููุงุช ุงูุญุฑุงุฑุฉ:** ูุง ุบูู ุนููุง ูู ุงูุฃุฑุตุงุฏ ุงูุฌููุฉุ ูุงูุนูููุ ูุงูุทุจ.
            ูุณูุญ ูู ูุฐุง ุงููุญูู ุจุงูุชุจุฏูู ุจูู ููุงููุณ ุงูุญุฑุงุฑุฉ ุงูุฑุฆูุณูุฉ: ูุฆููุฉ (ยฐC)ุ ููุฑููุงูุช (ยฐF)ุ ููููู (K).
            ุชุฃูุฏ ูู ุฃูู ุชุณุชุฎุฏู ุงููุญุฏุฉ ุงูุตุญูุญุฉ ูุชูุฑูุฑ ุงูุทูุณ ุฃู ุงูุชุฌุฑุจุฉ ุงูุนูููุฉ ุงููุงุฏูุฉ.
        `
        ,
        units: {
            'celsius': { name: 'ูุฆููุฉ (ยฐC)' },
            'fahrenheit': { name: 'ููุฑููุงูุช (ยฐF)' },
            'kelvin': { name: 'ูููู (K)' },
        }
    },
    'currency': {
        title: 'ุชุญููู ุงูุนููุงุช',
        icon: '๐ฐ',
        content: `
            **ุชุญูููุงุช ุงูุนููุงุช ุงูุญูุฉ:** ุฃุณุงุณ ุงูุชุฌุงุฑุฉ ุงูุนุงูููุฉ ูุงูุณูุฑ.
            ูููุฑ ูู ุงููุญูู ุงูุฐูู ุฃุณุนุงุฑ ุตุฑู ุญูุฉ ููุญุฏุซุฉ ููุนููุงุช ุงูุฑุฆูุณูุฉ ูุงูุนููุงุช ุงูุนุฑุจูุฉ.
            ุชุฐูุฑ ุฃู ุฃุณุนุงุฑ ุงูุนููุงุช ูุชู ุชุญุฏูุซูุง ูู 6 ุณุงุนุงุช ูุถูุงู ุงูุฏูุฉุ ูุชุนูู ุญุชู ูู ูุถุน ุนุฏู ุงูุงุชุตุงู ุจุงูุฅูุชุฑูุช.
        `
        ,
        units: {}
    }
};

const DESIRED_CURRENCIES = {
    'USD': 'ุฏููุงุฑ ุฃูุฑููู ($)',
    'EUR': 'ููุฑู (โฌ)',
    'SAR': 'ุฑูุงู ุณุนูุฏู (SAR)',
    'AED': 'ุฏุฑูู ุฅูุงุฑุงุชู (AED)',
    'KWD': 'ุฏููุงุฑ ูููุชู (KWD)',
    'QAR': 'ุฑูุงู ูุทุฑู (QAR)',
    'BHD': 'ุฏููุงุฑ ุจุญุฑููู (BHD)',
    'OMR': 'ุฑูุงู ุนูุงูู (OMR)',
    'EGP': 'ุฌููู ูุตุฑู (EGP)',
    'JOD': 'ุฏููุงุฑ ุฃุฑุฏูู (JOD)',
    'IQD': 'ุฏููุงุฑ ุนุฑุงูู (IQD)',
    'MAD': 'ุฏุฑูู ูุบุฑุจู (MAD)',
    // ... ุจุงูู ุงูุนููุงุช ...
};

// ูุชุบูุฑุงุช DOM
let currentCategory = null;
const categoryGrid = document.querySelector('.category-grid');
const mainScreen = document.getElementById('category-selection');
const converterScreen = document.getElementById('converter-screen');
const currentCategoryTitle = document.getElementById('current-category-title');
const sourceUnitSelect = document.getElementById('source-unit');
const targetUnitSelect = document.getElementById('target-unit');
const inputValue = document.getElementById('input-value');
const resultValue = document.getElementById('result-value');
const swapButton = document.getElementById('swap-units-btn');
const resetButton = document.getElementById('reset-button');
const categoryContentDiv = document.getElementById('category-content'); // ๐ฅ ุงูุฌุฏูุฏ: ูุณู ูุญุชูู ุงููุงุดุฑ
const contentText = document.getElementById('content-text'); // ๐ฅ ุงูุฌุฏูุฏ: ุงููุต ุฏุงุฎู ูุณู ูุญุชูู ุงููุงุดุฑ

// ๐ฅ ุงูุฌุฏูุฏ: ุฅุถุงูุฉ ูุณุชูุน ูุฒุฑ ุงูุนูุฏุฉ ูู ุดุฑูุท ุงูุชููู
document.querySelector('nav a[href="#home"]').addEventListener('click', returnToMainScreen);


// =================================================================
// 2. ุฏูุงู ุงูุชุญููู ุงูุฃุณุงุณูุฉ
// =================================================================
function convertTemperature(value, from, to) {
    let tempInC = 0;
    if (from === 'celsius') tempInC = value;
    else if (from === 'fahrenheit') tempInC = (value - 32) * (5 / 9);
    else if (from === 'kelvin') tempInC = value - 273.15;

    if (to === 'celsius') return tempInC;
    else if (to === 'fahrenheit') return (tempInC * (9 / 5)) + 32;
    else if (to === 'kelvin') return tempInC + 273.15;

    return 0;
}

function convertUnits(category, value, sourceUnit, targetUnit) {
    if (category === 'temp') {
        return convertTemperature(value, sourceUnit, targetUnit);
    }

    const units = ALL_UNITS[category].units;
    let baseValue = 0;

    if (category === 'currency') {
        const sourceRate = units[sourceUnit].rate;
        const targetRate = units[targetUnit].rate;

        baseValue = value / sourceRate;
        return baseValue * targetRate;
    } else {
        baseValue = value * units[sourceUnit].factor;
        return baseValue / units[targetUnit].factor;
    }
}

async function fetchCurrencyRates() {
    const cachedRates = localStorage.getItem(CURRENCY_CACHE_KEY);

    if (cachedRates) {
        const data = JSON.parse(cachedRates);
        const age = Date.now() - data.timestamp;

        if (age < CURRENCY_UPDATE_INTERVAL) {
            updateCurrencyUnits(data.rates);
            return true;
        }
    }

    try {
        const response = await fetch(API_URL);
        const data = await response.json();

        if (data && data.rates) {
            const ratesData = {
                rates: data.rates,
                timestamp: Date.now()
            };

            localStorage.setItem(CURRENCY_CACHE_KEY, JSON.stringify(ratesData));
            updateCurrencyUnits(data.rates);
            return true;
        }
    } catch (error) {
        if (cachedRates) {
            const data = JSON.parse(cachedRates);
            updateCurrencyUnits(data.rates);
            return true;
        }
        return false;
    }
}

function updateCurrencyUnits(rates) {
    ALL_UNITS.currency.units = {};
    for (const code in DESIRED_CURRENCIES) {
        if (rates[code]) {
            ALL_UNITS.currency.units[code.toLowerCase()] = {
                name: DESIRED_CURRENCIES[code],
                rate: rates[code]
            };
        }
    }
}


// =================================================================
// 3. ููุทู ุงูุฅุนูุงูุงุช (AdSense Logic) - ุชู ุงูุชุญุฏูุซ
// =================================================================

function showInterstitialAd() {
    // ** ููุทู ุงูุฅุนูุงู ุงูุจููู (AdSense) **
    
    // ูุณุชุฎุฏู ุงูุตูุบุฉ ุงูุฑุณููุฉ ูุทูุจ ุฅุนูุงู ุจููุก ุงูุดุงุดุฉ ุนุจุฑ AdSense
    try {
        if (window.adsbygoogle) {
            (adsbygoogle = window.adsbygoogle || []).push({
                google_ad_client: AD_CLIENT_ID, // ca-pub-6516738542213361
                enable_page_level_ads: true,
                overlays: {
                    google_ad_slot: INTERSTITIAL_AD_SLOT 
                }
            });
            console.log("Interstitial ad requested via push.");
        }
    } catch (e) {
        console.error("Error showing interstitial ad:", e);
    }
}


// ุฏุงูุฉ ุงูุนูุฏุฉ ููุดุงุดุฉ ุงูุฑุฆูุณูุฉ (Monetization Logic)
function returnToMainScreen(shouldUpdateHash = true) {
    if (shouldUpdateHash && window.location.hash) {
        window.history.pushState("", document.title, window.location.pathname);
    }

    // 1. ุฅุฎูุงุก ุดุงุดุฉ ุงูุชุญููู ูุฅุธูุงุฑ ุงูุฑุฆูุณูุฉ
    converterScreen.classList.add('hidden');
    mainScreen.classList.remove('hidden');
    currentCategory = null;

    // ๐ฅ ุงูุฌุฏูุฏ: ุฅุธูุงุฑ ูุณู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุนูุฏ ุงูุนูุฏุฉ ููุดุงุดุฉ ุงูุฑุฆูุณูุฉ
    document.getElementById('faq-section').classList.remove('hidden');

    // 2. ููุทู ุฅุธูุงุฑ ุงูุฅุนูุงู ุงูุจููู (ูุนูู ูู 2 ุนูููุงุช ุนูุฏุฉ)
    interstitialCounter++;
    if (interstitialCounter >= INTERSTITIAL_FREQUENCY) {
        showInterstitialAd();
        interstitialCounter = 0;
    }
}


// =================================================================
// 4. ุฏูุงู ุจูุงุก ุงููุงุฌูุฉ ูุงูุชูุงุนู
// =================================================================

function renderCategoryCards() {
    for (const key in ALL_UNITS) {
        const data = ALL_UNITS[key];
        const button = document.createElement('div'); // ุชู ุชุบููุฑูุง ุฅูู div ูุชุญุณูู ุงูุชุตููู
        button.className = 'category-card';
        button.dataset.category = key;
        button.innerHTML = `
            <span class="icon">${data.icon}</span>
            <p>${data.title}</p>
        `;
        categoryGrid.appendChild(button);

        button.addEventListener('click', () => {
            window.location.hash = key;
        });
    }
}

function loadConverterScreen(categoryKey) {
    currentCategory = categoryKey;
    let currentUnits = ALL_UNITS[categoryKey];

    if (!currentUnits) {
        returnToMainScreen(false);
        return;
    }

    currentCategoryTitle.textContent = currentUnits.title;

    // ๐ฅ ุงูุฌุฏูุฏ: ุชุญุฏูุซ ูุญุชูู ุงููุงุดุฑ
    contentText.textContent = currentUnits.content.trim();
    categoryContentDiv.classList.remove('hidden');

    sourceUnitSelect.innerHTML = '';
    targetUnitSelect.innerHTML = '';

    const unitKeys = Object.keys(currentUnits.units);

    unitKeys.forEach(unitKey => {
        const unitData = currentUnits.units[unitKey];
        const option1 = new Option(unitData.name, unitKey);
        const option2 = new Option(unitData.name, unitKey);
        sourceUnitSelect.appendChild(option1);
        targetUnitSelect.appendChild(option2);
    });

    inputValue.value = 1;
    resultValue.value = '0';

    mainScreen.classList.add('hidden');
    converterScreen.classList.remove('hidden');

    performConversion();

    // ๐ฅ ุงูุฌุฏูุฏ: ุฅุฎูุงุก ูุณู ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ ุนูุฏ ุงูุฏุฎูู ูุดุงุดุฉ ุงูุชุญููู
    document.getElementById('faq-section').classList.add('hidden');
}

function performConversion() {
    if (!currentCategory) return;

    const value = parseFloat(inputValue.value);
    if (isNaN(value)) {
        resultValue.value = 'ุฎุทุฃ';
        return;
    }

    const source = sourceUnitSelect.value;
    const target = targetUnitSelect.value;

    if (currentCategory === 'currency' && (!source || !target)) {
        resultValue.value = 'ุฌุงุฑู ุชุญููู ุงูุนููุงุช...';
        return;
    }

    const result = convertUnits(currentCategory, value, source, target);

    if (currentCategory === 'temp') {
         resultValue.value = result.toFixed(2);
    } else {
        resultValue.value = result.toFixed(4);
    }
}

function swapUnits() {
    const source = sourceUnitSelect.value;
    const target = targetUnitSelect.value;

    sourceUnitSelect.value = target;
    targetUnitSelect.value = source;

    performConversion();
}

function handleURLHash() {
    const hash = window.location.hash.substring(1).toLowerCase();
    if (hash && ALL_UNITS[hash]) {
        loadConverterScreen(hash);
    } else {
        returnToMainScreen(false);
    }
}


// =================================================================
// 5. ุชููุฆุฉ ุงูุชุทุจูู (ููุทุฉ ุงูุจุฏุงูุฉ)
// =================================================================
    document.addEventListener('DOMContentLoaded', async () => {
    await fetchCurrencyRates();
    renderCategoryCards();

    handleURLHash();

    window.addEventListener('hashchange', handleURLHash);

    inputValue.addEventListener('input', performConversion);
    sourceUnitSelect.addEventListener('change', performConversion);
    targetUnitSelect.addEventListener('change', performConversion);
    swapButton.addEventListener('click', swapUnits);

    resetButton.addEventListener('click', () => {
        inputValue.value = 0;
        resultValue.value = 0;
        returnToMainScreen();
    });

    document.querySelector('header').addEventListener('click', returnToMainScreen);
    
    // ๐ฅ ุงูุฌุฏูุฏ: ุฅุถุงูุฉ ูุณุชูุน ูุฒุฑ ุงูุนูุฏุฉ ูู ุดุฑูุท ุงูุชููู (ุชู ูููู ููุฃุนูู)
    // document.querySelector('nav a[href="#home"]').addEventListener('click', returnToMainScreen);
});
